local UILIB = loadstring(game:HttpGet('https://raw.githubusercontent.com/SergiuPro1222/Tap-PL2/main/SourceOfTheScript'))()
local SaveManager = loadstring(game:HttpGet('https://raw.githubusercontent.com/SergiuPro1222/Tap-PL2/main/SVG'))()
local ThemeManager = loadstring(game:HttpGet('https://raw.githubusercontent.com/SergiuPro1222/Tap-PL2/main/DesfucatedCode'))()
local Window = UILIB:CreateWindow({Title = 'Âçê Dendrite.cc Âçç                            Free Version[Overworld]',Center = true, AutoShow = true,})
UILIB:SetWatermark('Dendrite.cc | ' .. game.Players.LocalPlayer.DisplayName)
UILIB:SetWatermarkVisibility(true)
UILIB.KeybindFrame.Visible = false;
setclipboard('discord.gg/dkgW6MSu')
Library:Notify('üí∏ Dendrite.cc | Discord invite has been Copied To Clipboard', 6.9)
local Tabs = {
    Main = Window:AddTab('Main'),
    Visual = Window:AddTab('Visuals'),
    Misc = Window:AddTab('Misc'),
    ['UI Settings'] = Window:AddTab('Settings'),
}
----------------------------------Sexafk
local vu = game:GetService("VirtualUser")
local toggleAntiAFK = false
local antiAFKConnection
local function antiAFKAction()
    vu:Button2Down(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
    wait(1)
    vu:Button2Up(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
end
toggleAntiAFK = true
local function toggleAntiAFKFunction()
    if toggleAntiAFK then
        antiAFKConnection = game:GetService("Players").LocalPlayer.Idled:Connect(function()
            antiAFKAction()
        end)
    else
        if antiAFKConnection then
            antiAFKConnection:Disconnect()
        end
    end
end
local function toggleAntiAFKVariable()
    toggleAntiAFK = not toggleAntiAFK
    warn("Dendrite.cc: ANTI-AFK", toggleAntiAFK and "ENABLED" or "DISABLED")
    toggleAntiAFKFunction()
end
----------------SkiddersRemainSkidders
local workspace = game:GetService("Workspace")
local runService = game:GetService("RunService")
local fieldOfViewEnabled = false -- Toggle variable
local viewfovlocalplayer = 65
local defaultFieldOfView = 65
local function setFieldOfView()
    if fieldOfViewEnabled then
        workspace.CurrentCamera.FieldOfView = viewfovlocalplayer
    else
        workspace.CurrentCamera.FieldOfView = defaultFieldOfView
    end
end
runService.Heartbeat:Connect(function()
    setFieldOfView()
end)
------------------------ammatadew
local isActivecloudberry = false
local player = game.Players.LocalPlayer
local humanoidRootPart = player.Character:WaitForChild("HumanoidRootPart")

local function calculateDistance(position1, position2)
    return (position1 - position2).magnitude
end

local function walkToPointWithDelay(targetPosition, delay)
    wait(delay)
    player.Character.Humanoid:MoveTo(targetPosition)
end

local function interactAndWalkToPlantBoxesWithDelayscb()
    if not isActivecloudberry then return end
    local plantBoxes = game.Workspace.Deployables:GetChildren()
    local playerPosition = humanoidRootPart.Position

    for _, plantBox in pairs(plantBoxes) do
        if plantBox.Name == "Plant Box" and plantBox:FindFirstChild("Reference") and not plantBox:FindFirstChild("Seed") then
            local primaryPart = plantBox.PrimaryPart
            if primaryPart then
                local plantBoxPosition = primaryPart.Position
                local distance = calculateDistance(playerPosition, plantBoxPosition)
                if distance <= 15 then
                    walkToPointWithDelay(plantBoxPosition, 0.15)
                    local packetModule = require(game:GetService("ReplicatedStorage").Modules.Packets)
                    local elbluefruitpcvacket = packetModule.InteractStructure
                    elbluefruitpcvacket.send({ structure = plantBox, itemID = 101 })
                    return
                end
            end
        end
    end
end

local function cbfruitsFromBushesAndPlant()
    if not isActivecloudberry then return end
    local bloodfruitBushes = {}
    local playerPosition = humanoidRootPart.Position

    for _, obj in pairs(game.Workspace:GetChildren()) do
        if obj.Name:match("Tree") or obj.Name:match("Bush") or obj.Name:match("Cacti") or obj.Name:match("Crop") then
            table.insert(bloodfruitBushes, obj)
        end
    end

    local closestDistance = math.huge
    local closestBush

    for _, bush in pairs(bloodfruitBushes) do
        local primaryPart = bush.PrimaryPart
        if primaryPart then
            local bushPosition = primaryPart.Position
            local distance = calculateDistance(playerPosition, bushPosition)
            if distance < closestDistance then
                closestDistance = distance
                closestBush = bush
            end
        end
    end

    if closestBush then
        local primaryPart = closestBush.PrimaryPart
        if primaryPart then
            local bushPosition = primaryPart.Position
            walkToPointWithDelay(bushPosition, 0.15)
            local packetModule = require(game:GetService("ReplicatedStorage").Modules.Packets)
            local pickupPacket = packetModule.Pickup
            pickupPacket.send(closestBush)
        end
    else
        interactAndWalkToPlantBoxesWithDelayscb()
    end
end

local function togglecloudberry()
    isActivecloudberry = not isActivecloudberry
end

game:GetService("RunService").RenderStepped:Connect(interactAndWalkToPlantBoxesWithDelayscb)
game:GetService("RunService").RenderStepped:Connect(cbfruitsFromBushesAndPlant)

-- Locals
local Players = game:GetService("Players");
local LocalPlayer = Players.LocalPlayer;
local Camera = game:GetService("Workspace").Camera;
local Mouse = LocalPlayer:GetMouse();
local CurrentCamera = game:GetService("Workspace").Camera
local worldToViewportPoint = Camera.worldToViewportPoint

-- Drawing settings
local SynDrawUI = {
    Drawing_Esp = {
        Box               = false,
        BoxOutline        = false,
        BoxColor          = Color3.fromRGB(255, 140, 0),
        BoxOutlineColor   = Color3.fromRGB(0,0,0),
        Names             = false,
        Nametext          = "Enemy",
        Armor             = false,
        Armortext         = "Naked",
        Weapon            = false,
        Weapontext        = "Weapon: None",
        NamesOutline      = false,
        NamesColor        = Color3.fromRGB(255, 140, 0),
        ArmorOutline      = false,
        ArmorColor        = Color3.fromRGB(255, 140, 0),
        WeaponOutline     = false,
        WeaponColor       = Color3.fromRGB(255, 140, 0),
        NamesOutlineColor = Color3.fromRGB(0,0,0),
        NamesFont         = 2, -- 1,2,3
        NamesSize         = 13,
        ArmorOutlineColor = Color3.fromRGB(0,0,0),
        ArmorFont         = 2, -- 1,2,3
        ArmorSize         = 10,
        WeaponOutlineColor = Color3.fromRGB(0,0,0),
        WeaponFont        = 2, -- 1,2,3
        WeaponSize        = 13,
    }
}

-- Function to draw ESP
local function monkeymatic(Player)
    local Box,BoxOutline,Name,Weapon = Drawing.new("Square"), Drawing.new("Square"), Drawing.new("Text"), Drawing.new("Text")
    
    -- Render loop
    local FRESHABLE = game:GetService("RunService").RenderStepped:Connect(function()
        if Player ~= nil and
           Player:FindFirstChild("Humanoid") ~= nil and
           Player:FindFirstChild("HumanoidRootPart") ~= nil and
           Player:FindFirstChild("Head") ~= nil and
           Player:FindFirstChild("Humanoid").Health > 0 then  
            
            local NIGGERMAN, Wagner = Camera:WorldToViewportPoint(Player.HumanoidRootPart.Position)
            local Size = 1 / (NIGGERMAN.Z * math.tan(math.rad(Camera.FieldOfView * 0.4)) * 2.4) * 90
            local large, sizeinup = math.floor(43 * Size), math.floor(50 * Size)
            if SynDrawUI.Drawing_Esp.Names then
                Name.Visible = Wagner
                Name.Color = SynDrawUI.Drawing_Esp.NamesColor
                Name.Text = Player.Name
                Name.Center = true
                Name.Font = SynDrawUI.Drawing_Esp.NamesFont
                Name.Size = SynDrawUI.Drawing_Esp.NamesSize
                Name.Outline = SynDrawUI.Drawing_Esp.NamesOutline
                Name.OutlineColor = SynDrawUI.Drawing_Esp.NamesOutlineColor
                Name.Position = Vector2.new(NIGGERMAN.X, NIGGERMAN.Y - sizeinup * 0.5 + -15)
            else
                Name.Visible = false
            end
            if SynDrawUI.Drawing_Esp.Weapon then
                Weapon.Visible = Wagner
                Weapon.Color = SynDrawUI.Drawing_Esp.WeaponColor
                Weapon.Text = SynDrawUI.Drawing_Esp.Weapontext
                Weapon.Center = true
                Weapon.Outline = SynDrawUI.Drawing_Esp.WeaponOutline
                Weapon.OutlineColor = SynDrawUI.Drawing_Esp.WeaponOutlineColor
                Weapon.Position = Vector2.new(NIGGERMAN.X,NIGGERMAN.Y - sizeinup * -0.95 + -3)
                Weapon.Font = SynDrawUI.Drawing_Esp.ArmorFont
                Weapon.Size = SynDrawUI.Drawing_Esp.ArmorSize
                if Player:FindFirstChild("Rock") then
                    Weapon.Text = "Weapon: Rock"
                elseif Player:FindFirstChild("Bow") then
                        Weapon.Text = "Weapon: Bow"
                    elseif Player:FindFirstChild("God Rock") then
                        Weapon.Text = "Weapon: God Rock"
                else
                Weapon.Text = SynDrawUI.Drawing_Esp.Weapontext
            end
                else
                Weapon.Visible = false
                end
            if SynDrawUI.Drawing_Esp.Box then
                Box.Visible = Wagner
                Box.Color = SynDrawUI.Drawing_Esp.BoxColor
                Box.Size = Vector2.new(large, sizeinup)
                Box.Position = Vector2.new(NIGGERMAN.X - Box.Size.X / 2, NIGGERMAN.Y - Box.Size.Y / 2)
                Box.Filled = false
                Box.Thickness = 0.7
                Box.ZIndex = 1

                if SynDrawUI.Drawing_Esp.BoxOutline then
                    BoxOutline.Visible = Wagner
                    BoxOutline.Color = SynDrawUI.Drawing_Esp.BoxOutlineColor
                    BoxOutline.Size = Vector2.new(large, sizeinup)
                    BoxOutline.Position = Vector2.new(NIGGERMAN.X - Box.Size.X / 2, NIGGERMAN.Y - Box.Size.Y / 2)
                    BoxOutline.Filled = false
                    BoxOutline.Thickness = 3
                    BoxOutline.ZIndex = 1
                else
                    BoxOutline.Visible = false
                end
            else
                Box.Visible = false
                BoxOutline.Visible = false
            end
        else
            Box.Visible = false
            BoxOutline.Visible = false
            Name.Visible = false
            Weapon.Visible = false
            if not Player and Player:FindFirstChild("Head") then
                Name:Remove()
                Weapon:Remove()
                Box:Remove()
                BoxOutline:Remove()
                FRESHABLE:Disconnect()
            end
          end
    end)
end

local function handlePlayer(player)
    player.CharacterAdded:Connect(function(character)
        monkeymatic(character)
    end)
    
    if player.Character then
        monkeymatic(player.Character)
    end
end

for _, player in ipairs(Players:GetPlayers()) do
    if player ~= LocalPlayer then
        handlePlayer(player)
    end
end

Players.PlayerAdded:Connect(function(player)
    if player ~= LocalPlayer then
        handlePlayer(player)
    end
end)

--------------------------zapalot

local Player = game.Players.LocalPlayer
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")

local PacketModuleIcegold = require(ReplicatedStorage.Modules.Packets)
local miadatmiadatpachetig = PacketModuleIcegold.SwingTool

local goldFarmEnabled = false
local searchRange = 45 -- Adjust range as needed

local function calculateDistance(position1, position2)
    return (position1 - position2).magnitude
end

local function walkToPoint(targetPosition)
    local humanoidRootPart = Player.Character and Player.Character:FindFirstChild("HumanoidRootPart")
    if humanoidRootPart then
        Player.Character.Humanoid:MoveTo(targetPosition)
    end
end

local function FindNearestGoldNode(playerPosition)
    local resources = Workspace.Resources
    local nearestGoldNode
    local closestDistance = math.huge

    for _, goldNode in ipairs(resources:GetChildren()) do
        local smallRock = goldNode:FindFirstChild("Small Rock")
        if smallRock then
            local goldNodePosition = smallRock.Position
            local distance = calculateDistance(playerPosition, goldNodePosition)
            if distance < closestDistance and distance <= searchRange then
                closestDistance = distance
                nearestGoldNode = goldNode
            end
        end
    end

    return nearestGoldNode
end

-- Function to toggle gold farming and auto walk to nearest gold node
local function toggleGoldFarming()
    goldFarmEnabled = not goldFarmEnabled
end

RunService.Heartbeat:Connect(function()
    if goldFarmEnabled then
        local playerPosition = Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") and Player.Character.HumanoidRootPart.Position
        if playerPosition then
            local nearestGoldNode = FindNearestGoldNode(playerPosition)
            if nearestGoldNode then
                local smallRock = nearestGoldNode:FindFirstChild("Small Rock")
                if smallRock then
                    walkToPoint(smallRock.Position)
                    local hitargs = { smallRock }
                    miadatmiadatpachetig.send(hitargs)
                    smallRock.AncestryChanged:Wait() -- Wait until the gold node is destroyed
                end
            end
        end
    end
end)


--------------------------------------------------------flay
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TweenService = game:GetService("TweenService")
local mouse = Players.LocalPlayer:GetMouse()

FLYING = false
iyflyspeed = 0
vehicleflyspeed = 1.25


-- i love stealing features from infinite yield and adding them to my script :sunglasses:
function sFLY(vfly)
    repeat wait() until Players.LocalPlayer and Players.LocalPlayer.Character and Players.LocalPlayer.Character.HumanoidRootPart and Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
    repeat wait() until mouse
    if flyKeyDown or flyKeyUp then flyKeyDown:Disconnect() flyKeyUp:Disconnect() end

    local T = Players.LocalPlayer.Character.HumanoidRootPart
    local CONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
    local lCONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
    local SPEED = 0

    local function FLY()
        FLYING = true
        local BG = Instance.new('BodyGyro')
        local BV = Instance.new('BodyVelocity')
        BG.P = 9e4
        BG.Parent = T
        BV.Parent = T
        BG.maxTorque = Vector3.new(9e9, 9e9, 9e9)
        BG.cframe = T.CFrame
        BV.velocity = Vector3.new(0, 0, 0)
        BV.maxForce = Vector3.new(9e9, 9e9, 9e9)
        task.spawn(function()
            repeat wait()
                if not vfly and Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid') then
                    Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').PlatformStand = true
                end
                if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 or CONTROL.Q + CONTROL.E ~= 0 then
                    SPEED = 50
                elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 or CONTROL.Q + CONTROL.E ~= 0) and SPEED ~= 0 then
                    SPEED = 0
                end
                if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 or (CONTROL.Q + CONTROL.E) ~= 0 then
                    BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (CONTROL.F + CONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B + CONTROL.Q + CONTROL.E) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
                    lCONTROL = {F = CONTROL.F, B = CONTROL.B, L = CONTROL.L, R = CONTROL.R}
                elseif (CONTROL.L + CONTROL.R) == 0 and (CONTROL.F + CONTROL.B) == 0 and (CONTROL.Q + CONTROL.E) == 0 and SPEED ~= 0 then
                    BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (lCONTROL.F + lCONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(lCONTROL.L + lCONTROL.R, (lCONTROL.F + lCONTROL.B + CONTROL.Q + CONTROL.E) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
                else
                    BV.velocity = Vector3.new(0, 0, 0)
                end
                BG.cframe = workspace.CurrentCamera.CoordinateFrame
            until not FLYING
            CONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
            lCONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
            SPEED = 0
            BG:Destroy()
            BV:Destroy()
            if Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid') then
                Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').PlatformStand = false
            end
        end)
    end
    flyKeyDown = mouse.KeyDown:Connect(function(KEY)
        if KEY:lower() == 'w' then
            CONTROL.F = (vfly and vehicleflyspeed or iyflyspeed)
        elseif KEY:lower() == 's' then
            CONTROL.B = - (vfly and vehicleflyspeed or iyflyspeed)
        elseif KEY:lower() == 'a' then
            CONTROL.L = - (vfly and vehicleflyspeed or iyflyspeed)
        elseif KEY:lower() == 'd' then 
            CONTROL.R = (vfly and vehicleflyspeed or iyflyspeed)
        elseif QEfly and KEY:lower() == 'e' then
            CONTROL.Q = (vfly and vehicleflyspeed or iyflyspeed)*2
        elseif QEfly and KEY:lower() == 'q' then
            CONTROL.E = -(vfly and vehicleflyspeed or iyflyspeed)*2
        end
        pcall(function() workspace.CurrentCamera.CameraType = Enum.CameraType.Track end)
    end)
    flyKeyUp = mouse.KeyUp:Connect(function(KEY)
        if KEY:lower() == 'w' then
            CONTROL.F = 0
        elseif KEY:lower() == 's' then
            CONTROL.B = 0
        elseif KEY:lower() == 'a' then
            CONTROL.L = 0
        elseif KEY:lower() == 'd' then
            CONTROL.R = 0
        elseif KEY:lower() == 'e' then
            CONTROL.Q = 0
        elseif KEY:lower() == 'q' then
            CONTROL.E = 0
        end
    end)
    FLY()
end

function NOFLY()
    FLYING = false
    if flyKeyDown or flyKeyUp then flyKeyDown:Disconnect() flyKeyUp:Disconnect() end
    if Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid') then
        Players.LocalPlayer.Character.Humanoid.PlatformStand = false
    end
    pcall(function() workspace.CurrentCamera.CameraType = Enum.CameraType.Custom end)
end
------------------------------------------------------------------new v2
local xsizetoyZ = 9
local transfagarasanbox = 0.7
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local hitboxActive = false
local hitboxTransparency = transfagarasanbox

local function modifyHumanoidRootPart(player)
    local character = player.Character
    if character then
        local humanoidRootPart = character:WaitForChild("HumanoidRootPart", 3)
        humanoidRootPart.Size = hitboxActive and Vector3.new(xsizetoyZ, xsizetoyZ, xsizetoyZ) or Vector3.new(2, 2, 1)
    end
end

local function modifyTransparency(playerx)
    if playerx and playerx.Character then
        local character = playerx.Character
        local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
        if humanoidRootPart then
            humanoidRootPart.Transparency = hitboxActive and hitboxTransparency or 1
        end
    end
end

local function modifyHumanoidRootPartsForAllPlayers()
    for _, player in ipairs(Players:GetPlayers()) do
        modifyHumanoidRootPart(player)
        modifyTransparency(player)
    end
end

local function updateHitboxProperties(size, transparency)
    hitboxTransparency = transparency
    modifyHumanoidRootPartsForAllPlayers() -- Update hitbox properties for all players
end

Players.PlayerAdded:Connect(function(player)
    modifyHumanoidRootPart(player)
    modifyTransparency(player)
end)

RunService.Heartbeat:Connect(function()
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= Players.LocalPlayer then
            local character = player.Character
            if character then
                local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
                if humanoidRootPart then
                    humanoidRootPart.Transparency = hitboxActive and hitboxTransparency or 1
                    humanoidRootPart.Size = hitboxActive and Vector3.new(xsizetoyZ, xsizetoyZ, xsizetoyZ) or Vector3.new(2, 2, 1)
                end
            end
        end
    end
end)

-- Function to auto-update hitbox properties when variables change
local function autoUpdateHitbox()
    while true do
        wait(0.1) -- Check every 0.1 seconds for changes
        modifyTransparency()
    end
end

-- Start auto-updating hitbox properties
spawn(autoUpdateHitbox)


-------------------------bogaboga
local Player = game:GetService("Players").LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")

-- Variable to track if auto pickup is enabled
local autoPickupEnabled = false
local heartbeatConnection -- Store the heartbeat connection

-- Function to find instances by name and class
local function getItemsByNameAndClass(name, class)
	local items = {}
	for _, v in pairs(game:GetService("Workspace").Items:GetChildren()) do
		if v:IsA(class) and v.Name == name then
			table.insert(items, v)
		end
	end
	return items
end

-- Function to send pickup packet with specified items
local function sendPickup(items)
	local packpackautopk = require(ReplicatedStorage.Modules.Packets)
	local ComplexSentToPICK = packpackautopk.Pickup
	ComplexSentToPICK.send(items)
end

-- Function to pick up relevant items
local function autoPickupItems()
	if autoPickupEnabled then
		local itemsToPickup = {}
		local rawGold = getItemsByNameAndClass("Raw Gold", "UnionOperation") -- Find raw gold
		local crystalChunk = getItemsByNameAndClass("Crystal Chunk", "UnionOperation") -- Find crystal chunk
		local emerald = getItemsByNameAndClass("Emerald", "UnionOperation") -- Find emerald
		local rawIron = getItemsByNameAndClass("Raw Iron", "UnionOperation") -- Find raw iron
		local bolts = getItemsByNameAndClass("Bolt", "UnionOperation") -- Find bolts
		local arrows = getItemsByNameAndClass("Arrow", "Model") -- Find arrows

		-- Add found items to the list
		for _, item in ipairs(rawGold) do
			table.insert(itemsToPickup, item)
		end
		for _, item in ipairs(crystalChunk) do
			table.insert(itemsToPickup, item)
		end
		for _, item in ipairs(emerald) do
			table.insert(itemsToPickup, item)
		end
		for _, item in ipairs(rawIron) do
			table.insert(itemsToPickup, item)
		end
		for _, item in ipairs(bolts) do
			table.insert(itemsToPickup, item)
		end
		for _, item in ipairs(arrows) do
			table.insert(itemsToPickup, item.Arrow)
		end

		-- Send pickup packet with relevant items
		if #itemsToPickup > 0 then
			sendPickup(itemsToPickup)
		end
	end
end

-- Function to toggle auto pickup on/off
local function toggleAutoPickup()
	autoPickupEnabled = not autoPickupEnabled
	if autoPickupEnabled then
		heartbeatConnection = RunService.Heartbeat:Connect(autoPickupItems)
	else
		if heartbeatConnection then
			heartbeatConnection:Disconnect()
			heartbeatConnection = nil
		end
	end
end

------------------------------------sexy
local HealingHPPrecent = 70
local player = game:GetService("Players").LocalPlayer
local inventoryList = player.PlayerGui.MainGui.RightPanel.Inventory.List
local xxxxxxxpacketsenttoadminmoderator2dot0 = require(game:GetService("ReplicatedStorage").Modules.Packets)
local HEALINGSUPPORTINCOMMING = xxxxxxxpacketsenttoadminmoderator2dot0.UseBagItem

local lastHealth = 0  -- Initialize to 0

local function findFruitNumber(fruitName)
    for i, item in ipairs(inventoryList:GetChildren()) do
        if item.Name == fruitName then
            return i
        end
    end
    return nil
end

local function useFruit(fruitName)
    local fruitNumber = findFruitNumber(fruitName)
    if fruitNumber then  
        HEALINGSUPPORTINCOMMING.send(fruitNumber - 1)
    else
        warn("Dendrite.cc: " .. fruitName .. " not found in the inventory list.")
    end
end

local ishealing = false
local selectedFruit = "Bloodfruit"

local function toggleScripthea()
    ishealing = not ishealing
    if ishealing then
        print("Automatic healing enabled.")
    else
        print("Automatic healing disabled.")
    end
end

game:GetService("RunService").Heartbeat:Connect(function()
    if ishealing and player.Character then
        local humanoid = player.Character:FindFirstChild("Humanoid")
        if humanoid then
            local currentHealth = humanoid.Health
            if currentHealth < lastHealth and currentHealth < HealingHPPrecent then
                useFruit(selectedFruit)
            end
            lastHealth = currentHealth
        end
    end
end)

-----------------------------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
local MainLeft = Tabs.Main:AddRightGroupbox('Ragebot Misc')
local MainRechts = Tabs.Main:AddLeftGroupbox('Main')

MainLeft:AddToggle('sdadsadazzssSEXOS', {
    Text = 'Enemy Hitbox',
    Default = false,                         -- Default value (true / false)
    Tooltip = 'Enable/Disable Enemy Hitbox', -- Information shown when you hover over the toggle
})
Toggles.sdadsadazzssSEXOS:OnChanged(function(metinalaksaaversionen)
    hitboxActive = metinalaksaaversionen
    end)
MainLeft:AddSlider('hitasdjhasldjljasdsdd', { Text = 'Enemy Hitbox Size', Default = 7.5, Min = 5, Max = 9, Rounding = 1, Compact = false, }) 
Options.hitasdjhasldjljasdsdd:OnChanged(function(Heatmebabyonetwothree2) 
    xsizetoyZ = Heatmebabyonetwothree2
end)
--------------
MainLeft:AddToggle('sssssccxxxskizzwareees', {
    Text = 'Hit Aura',
    Default = false,                         -- Default value (true / false)
    Tooltip = 'Enable/Disable Hit Aura', -- Information shown when you hover over the toggle
})
local localPlayer = game.Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Modules = ReplicatedStorage.Modules
local PacketModule = require(Modules.Packets)
local SwingToolPacket = PacketModule.SwingTool

local function getDistance(point1, point2)
    return (point1 - point2).magnitude
end

local function findNearestPlayer()
    local nearestPlayer = nil
    local minDistance = math.huge
    
    for _, player in ipairs(game.Players:GetPlayers()) do
        if player ~= localPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local distance = getDistance(player.Character.HumanoidRootPart.Position, localPlayer.Character.HumanoidRootPart.Position)
            if distance < minDistance then
                minDistance = distance
                nearestPlayer = player
            end
        end
    end
    
    return nearestPlayer
end

local isLoopRunning = false
local delay = 0.01  -- Delay in seconds

local function performActionOnNearestPlayer()
    if not isLoopRunning then
        return
    end
    
    local nearestPlayer = findNearestPlayer()
    if nearestPlayer then
        local hitargs = {
            [1] = nearestPlayer.Character.HumanoidRootPart
        }
        SwingToolPacket.send(hitargs)
    end
    wait(delay)
    performActionOnNearestPlayer()
end

local function toggleLoop()
    isLoopRunning = not isLoopRunning
    if isLoopRunning then
        performActionOnNearestPlayer()
    end
end
Toggles.sssssccxxxskizzwareees:OnChanged(function(Skizzwarerockaura)
    if Skizzwarerockaura == true then
        toggleLoop()
    elseif Skizzwarerockaura == false then
        isLoopRunning = false
    end
end)
    
game:GetService("RunService").Heartbeat:Connect(function()
    if isLoopRunning then
        performActionOnNearestPlayer()
    end
end)
MainLeft:AddToggle('slashermanskizzer', {
    Text = 'Hit Animation',
    Default = false,
    Tooltip = 'Enable/Disable Hit Animation'
})
local player = game.Players.LocalPlayer
local replicatedStorage = game:GetService("ReplicatedStorage")
local animation = replicatedStorage.Animations.Slash
local isHITAnimationPlaying = false

local function playAnimationslash()
    local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
    if humanoid then
        local animationTrack = humanoid:LoadAnimation(animation)
        animationTrack:Play()
        animationTrack.Stopped:Wait()
    end
end

local function toggleAnimation(newValue)
    isHITAnimationPlaying = newValue
    while isHITAnimationPlaying do
        playAnimationslash()
    end
end

Toggles.slashermanskizzer:OnChanged(function(SlashmeDaddyPleaseMommy) 
    toggleAnimation(SlashmeDaddyPleaseMommy)
end)
--------------end hitaura
MainLeft:AddToggle('facePlayerintwopointzero', {
    Text = 'Face Enemy',
    Default = false,                         -- Default value (true / false)
    Tooltip = 'Enable/Disable Face Enemy', -- Information shown when you hover over the toggle
})
local player = game:GetService("Players").LocalPlayer
local ToggleFaceOff = false
local function findClosestPlayer()
    local closestDistance = math.huge
    local closestPlayer = nil
    
    for _, otherPlayer in ipairs(game:GetService("Players"):GetPlayers()) do
        if otherPlayer ~= player and otherPlayer.Character and otherPlayer.Character:FindFirstChild("HumanoidRootPart") then
            local distance = (otherPlayer.Character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).magnitude
            if distance < closestDistance then
                closestDistance = distance
                closestPlayer = otherPlayer
            end
        end
    end
    
    return closestPlayer
end
local function faceClosestPlayer()
    if ToggleFaceOff then
        local closestPlayer = findClosestPlayer()
        if closestPlayer then
            local direction = (closestPlayer.Character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).unit
            player.Character.HumanoidRootPart.CFrame = CFrame.new(player.Character.HumanoidRootPart.Position, player.Character.HumanoidRootPart.Position + Vector3.new(direction.X, 0, direction.Z))
        end
    end
end
game:GetService("RunService").Heartbeat:Connect(function()
    faceClosestPlayer()
end)
local function toggleFaceOff()
    ToggleFaceOff = not ToggleFaceOff
end
Toggles.facePlayerintwopointzero:OnChanged(function(FaceOffWithNiggers) 
    if FaceOffWithNiggers == true then
        ToggleFaceOff = true
    elseif FaceOffWithNiggers == false then
        ToggleFaceOff = false
    end
end)
---------------------------AICIA SE PUNE STOP DA
MainRechts:AddDropdown('autohealingme', {
    Values = { 'Bloodfruit', 'Lemon', 'Berry', 'Bluefruit', 'Carrot' },
    Default = 1,
    Multi = false,
    Text = 'Healing Types',
    Tooltip = 'Choose a Fruit to Heal With.'
})

MainRechts:AddSlider('changehealingoptionstatus', { Text = 'Healing Percent', Default = 70, Min = 30, Max = 100, Rounding = 1, Compact = false, }) 
Options.changehealingoptionstatus:OnChanged(function(Sexonhealingprocent) 
    HealingHPPrecent = Sexonhealingprocent
end)

MainRechts:AddToggle('Autohealniggerspvp', {
    Text = 'Automatic Heal',
    Default = false,
    Tooltip = 'Enable/Disable Automatic Heal'
})

Toggles.Autohealniggerspvp:OnChanged(function(healniggersinpvp2024) 
    if healniggersinpvp2024 then
        toggleScripthea()
        ishealing = true
        selectedFruit = Options.autohealingme.Value
    else
        ishealing = false
    end
end)


---------------------VISUAL
local VisualsLeft = Tabs.Visual:AddLeftGroupbox('Enemy Visuals')

VisualsLeft:AddToggle('Player_NamesToggle', {Text = 'Enemy ESP', Default = false}):AddColorPicker("Player_NamesToggle", {Default = Color3.fromRGB(255, 69, 0)}):OnChanged(function()
    SynDrawUI.Drawing_Esp.Names = Toggles.Player_NamesToggle.Value
end)
Options.Player_NamesToggle:OnChanged(function()
    SynDrawUI.Drawing_Esp.NamesColor = Options.Player_NamesToggle.Value
end)
VisualsLeft:AddToggle('xdboxshiterx', {
    Text = 'EnemyOutline',
    Default = false,                -- Default value (true / false)
    Tooltip = 'Enable/Disable Enemy Outline', -- Information shown when you hover over the toggle
    })
    Toggles.xdboxshiterx:OnChanged(function(xdboxshitedx)
        SynDrawUI.Drawing_Esp.NamesOutline = xdboxshitedx
    end)

    VisualsLeft:AddToggle('Player_BoxToggle', {Text = 'Box ESP', Default = false}):AddColorPicker("Player_BoxToggle", {Default = Color3.fromRGB(255, 69, 0)}):OnChanged(function()
    SynDrawUI.Drawing_Esp.Box = Toggles.Player_BoxToggle.Value
end)
Options.Player_BoxToggle:OnChanged(function()
    SynDrawUI.Drawing_Esp.BoxColor = Options.Player_BoxToggle.Value
end)
VisualsLeft:AddToggle('Player_WeaponToggle', {Text = 'Weapon ESP', Default = false}):AddColorPicker("Player_WeaponToggle", {Default = Color3.fromRGB(255, 69, 0)}):OnChanged(function()
    SynDrawUI.Drawing_Esp.Weapon = Toggles.Player_WeaponToggle.Value
end)
Options.Player_WeaponToggle:OnChanged(function()
    SynDrawUI.Drawing_Esp.WeaponColor = Options.Player_WeaponToggle.Value
end)
VisualsLeft:AddToggle('x1z', {
    Text = 'WeaponOutline',
    Default = false,                -- Default value (true / false)
    Tooltip = 'Enable/Disable WeaponsOutline Esp', -- Information shown when you hover over the toggle
    })
Toggles.x1z:OnChanged(function(sadusdanut)
    SynDrawUI.Drawing_Esp.WeaponOutline = sadusdanut
end)
---------------viosualmisc
    local Visualmiscs = Tabs.Visual:AddRightGroupbox('Misc')
------AICIA BAG CHAMS SI PULA MEA LA LOCALPLAYER












------------------MISCURI
local NormalMisc = Tabs.Misc:AddLeftGroupbox('Misc')
local localmiscs = Tabs.Misc:AddLeftGroupbox('Local Misc')
localmiscs:AddToggle('asddddacccccxxxxx', {
    Text = 'Shark Fly',
    Default = false,               -- Default value (true / false)
    Tooltip = 'Enable/Disable Boat Fly', -- Information shown when you hover over the toggle
})
Toggles.asddddacccccxxxxx:OnChanged(function(v) 
    if v then
        task.wait(0.01)
        wait(0.25)
        sFLY(true)
    else
        NOFLY()
    end
end)

NormalMisc:AddToggle('hkjkjjfajshadjasjdlsaljdasljdasljkd', {
    Text = 'Automatic Pickup',
    Default = false,               -- Default value (true / false)
    Tooltip = 'Enable/Disable Automatic Pickup', -- Information shown when you hover over the toggle
})

Toggles.hkjkjjfajshadjasjdlsaljdasljdasljkd:OnChanged(function(autopickermigernigger1) 
    autopickupActive = autopickermigernigger1
end)


NormalMisc:AddToggle('bunnyhopinsainesss', {
    Text = 'Automatic Jump',
    Default = false,               -- Default value (true / false)
    Tooltip = 'Enable/Disable Automatic Jump/BunnyHop', -- Information shown when you hover over the toggle
})

local player = game:GetService("Players").LocalPlayer

local bunnyHopEnabled = false

-- Function to toggle bunny hop
local function toggleBunnyHop()
    bunnyHopEnabled = not bunnyHopEnabled
end

-- Function to perform bunny hop
local function performBunnyHop()
    if bunnyHopEnabled then
        local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.Jump = true
        end
    end
end

-- Connect the function to the RenderStepped event to continuously check for bunny hop
game:GetService("RunService").RenderStepped:Connect(performBunnyHop)

Toggles.bunnyhopinsainesss:OnChanged(function(bunnyhoptogMedicamente) 
    if bunnyhoptogMedicamente == true then
        bunnyHopEnabled = true
    elseif bunnyhoptogMedicamente == false then
        bunnyHopEnabled = false
    end
end)
NormalMisc:AddToggle('fullbrightmamaamiaaaaaaaaaa', {
    Text = 'Fullbright',
    Default = false,               -- Default value (true / false)
    Tooltip = 'Enable/Disable Fullbright', -- Information shown when you hover over the toggle
})
local Lighting = game:GetService("Lighting")
local defaultAmbient = Lighting.Ambient
local defaultBrightness = Lighting.Brightness
local fogdefaultmicha = Lighting.FogEnd
local fullbrightEnabled = true
local function toggleFullbright()
    if fullbrightEnabled then
        Lighting.Ambient = defaultAmbient
        Lighting.Brightness = defaultBrightness
        Lighting.FogEnd = fogdefaultmicha
    else
        Lighting.Ambient = Color3.fromRGB(255, 255, 255)
        Lighting.Brightness = 5
        fogdefaultmicha = 200000
    end
    fullbrightEnabled = not fullbrightEnabled
end
Toggles.fullbrightmamaamiaaaaaaaaaa:OnChanged(function(Fullbrigulet) 
    toggleFullbright()
end)
------------------------PLM2024LAMISCLOCALPULAMEA
localmiscs:AddToggle('jhhjasdhhdhkdhdhdhdhdhdakskakakasjdahsdk', {
    Text = 'Local Speed',
    Default = false,               -- Default value (true / false)
    Tooltip = 'Enable/Disable Local Speed', -- Information shown when you hover over the toggle
})

Toggles.jhhjasdhhdhkdhdhdhdhdhdakskakakasjdahsdk:OnChanged(function(skiddersremainsskiddersfronetwothree4) 
    if skiddersremainsskiddersfronetwothree4 == true then
      
    elseif  skiddersremainsskiddersfronetwothree4 == false then
        
    end
end)
localmiscs:AddSlider('sexfasjlsdlahsldjlspeed25skfasjkdf', { Text = 'Local Speed Rate', Default = 16, Min = 16, Max = 60, Rounding = 1, Compact = false, }) 
Options.sexfasjlsdlahsldjlspeed25skfasjkdf:OnChanged(function(trythespeedoflight2024LOL) 
   
end)

localmiscs:AddToggle('AMMAMAMAMMAMAMAAMSJDSJDJDJDJDHFHFHGHGHGHGHSKID', {
    Text = 'Local FOV',
    Default = false,               -- Default value (true / false)
    Tooltip = 'Enable/Disable Local FOV', -- Information shown when you hover over the toggle
})
Toggles.AMMAMAMAMMAMAMAAMSJDSJDJDJDJDHFHFHGHGHGHGHSKID:OnChanged(function(amammamamassjsjsjmataetarelapizdadadadaskizzwarisaskid) 
    if amammamamassjsjsjmataetarelapizdadadadaskizzwarisaskid == true then
        fieldOfViewEnabled = true
    elseif amammamamassjsjsjmataetarelapizdadadadaskizzwarisaskid == false then
        fieldOfViewEnabled = false
    end
end)
localmiscs:AddSlider('ASDAHKASFAJSDJHSADSADJLASDJL', { Text = 'FOV', Default = 65, Min = 65, Max = 120, Rounding = 1, Compact = false, }) 
Options.ASDAHKASFAJSDJHSADSADJLASDJL:OnChanged(function(friedhofskizzwareoneg) 
    viewfovlocalplayer = friedhofskizzwareoneg
end)
localmiscs:AddSlider('SAKDHAHKDSAHGDSAGHDGHSADSADJSADKJASDJAS', { Text = 'Local Gravity', Default = 196.2, Min = 75, Max = 196.2, Rounding = 1, Compact = false, }) 
Options.SAKDHAHKDSAHGDSAGHDGHSADSADJSADKJASDJAS:OnChanged(function(gravvitytoupdatesince2024) 
    game.Workspace.Gravity = gravvitytoupdatesince2024
end)
--------------------------------------------------------------
local BirdFarmMisc = Tabs.Misc:AddRightGroupbox('Bird Farm')

BirdFarmMisc:AddToggle('asdasdasddddd', {
    Text = 'Bird Hitbox',
    Default = false,               -- Default value (true / false)
    Tooltip = 'Enable/Disable Bird Hitbox', -- Information shown when you hover over the toggle
})
local niggasizedick = 5
local niggabirdtransparent = 0.7
local toggleValue = false -- Initialize the toggle value

local function refreshHitboxes(refresh)
    for _, x in ipairs(workspace.Critters:GetChildren()) do
        if x.Name == "Bird" then
            local hitbox = x:FindFirstChild("Hitbox")
            if hitbox then
                hitbox.Size = Vector3.new(refresh and niggasizedick or 5, refresh and niggasizedick or 2, refresh and niggasizedick or 4)
                hitbox.Transparency = refresh and niggabirdtransparent or 1
            end
        end
    end

    for _, r in ipairs(game.ReplicatedFirst:GetChildren()) do
        if r.Name == "Bird" then
            local hitbox = r:FindFirstChild("Hitbox")
            if hitbox then
                hitbox.Size = Vector3.new(refresh and niggasizedick or 5, refresh and niggasizedick or 2, refresh and niggasizedick or 4)
                hitbox.Transparency = refresh and niggabirdtransparent or 1
            end
        end
    end
end

Toggles.asdasdasddddd:OnChanged(function(valuehitbox) 
    toggleValue = valuehitbox -- Update the toggle value
    refreshHitboxes(valuehitbox)
end)

game:GetService("RunService").Heartbeat:Connect(function()
    refreshHitboxes(toggleValue) -- Use the stored toggle value
end)

BirdFarmMisc:AddSlider('asdasdasdasdasdadasdsdffgggg', { Text = 'Bird Hitbox Size', Default = 5, Min = 5, Max = 15, Rounding = 1, Compact = false, }) 
Options.asdasdasdasdasdadasdsdffgggg:OnChanged(function(Nigerhofjsfljsdfsdsjlgsdkjlfsd) 
    niggasizedick = Nigerhofjsfljsdfsdsjlgsdkjlfsd
end)
BirdFarmMisc:AddSlider('niggerbirdtransparent1', { Text = 'Bird Hitbox Transparency', Default = 0.7, Min = 0.4, Max = 1, Rounding = 1, Compact = false, }) 
Options.niggerbirdtransparent1:OnChanged(function(unhoffentlichasdkasljahsdajdjadlj) 
    niggabirdtransparent = unhoffentlichasdkasljahsdajdjadlj
end)

--------------------------------------pula mea gold farm shitty ass skidders sucks dicks and cocks and defuscators aswell
local GoldFarmMisc = Tabs.Misc:AddRightGroupbox('Gold Farm')

GoldFarmMisc:AddToggle('sexongoldnodesfrfrfrfrfrfrfrfxxx', {
    Text = 'Gold Farm',
    Default = false,               -- Default value (true / false)
    Tooltip = 'Enable/Disable Gold Farm', -- Information shown when you hover over the toggle
})

Toggles.sexongoldnodesfrfrfrfrfrfrfrfxxx:OnChanged(function(valueofgoldfarm2024) 
   if valueofgoldfarm2024 == true then
    goldFarmEnabled = true
   elseif valueofgoldfarm2024 == false then
    goldFarmEnabled = false
   end
end)


-----------------test v2
local Player = game:GetService("Players").LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")

-- Variable to track if auto pickup is enabled
local autoPickupEnabled = true

-- Store the heartbeat connection
local heartbeatConnection

-- Function to find an instance by name and class
local function getNil(name, class)
    for _, v in pairs(game:GetService("Workspace").Items:GetChildren()) do
        if v:IsA(class) and v.Name == name then
            return v
        end
    end
end

-- Function to send pickup packet with specified items
local function sendPickup(item)
    local packpackautopk = require(ReplicatedStorage.Modules.Packets)
    local ComplexSentToPICK = packpackautopk.Pickup
    ComplexSentToPICK.send({ item })
end

-- Function to pick up raw gold
local function autoPickupRawGold()
    if autoPickupEnabled then
        local rawGold = getNil("Raw Gold", "UnionOperation") -- Find raw gold
        if rawGold then
            -- Send pickup packet with raw gold
            sendPickup(rawGold)
        end
    end
end
autoPickupRawGold()
-- Connect to heartbeat
heartbeatConnection = RunService.Heartbeat:Connect(autoPickupRawGold)


GoldFarmMisc:AddToggle('asdasdasdddddeattt', {
    Text = 'Gold eat',
    Default = false,               -- Default value (true / false)
    Tooltip = 'Enable/Disable Gold eat', -- Information shown when you hover over the toggle
})

Toggles.asdasdasdddddeattt:OnChanged(function(valueaeatttss) 
   if valueaeatttss == true then
    autoPickupEnabled = true
   elseif valueaeatttss == false then
    autoPickupEnabled = false
   end
end)


-----------testttt

local PlantFarmMisc = Tabs.Misc:AddRightGroupbox('Plant Farm')
-------------------
PlantFarmMisc:AddDropdown('plantfruitplantez', {
    Values = { 'Bloodfruit', 'Lemon', 'Banana', 'Bluefruit', 'Orange', 'Apple', 'Berry', 'Prickly Pear', 'Cloudberry', 'Jelly', 'Harvest Only' },
    Default = 1,
    Multi = false,
    Text = 'Fruits Types',
    Tooltip = 'Choose an Fruit to Plant.',
})
PlantFarmMisc:AddToggle('plantplantmenigga', {
    Text = 'Plant Fruits',
    Default = false,               -- Default value (true / false)
    Tooltip = 'Enable/Disable Plant Fruits', -- Information shown when you hover over the toggle
})

Toggles.plantplantmenigga:OnChanged(function(plantcotton1) 
    if Options.plantfruitplantez.Value == "Bloodfruit" and plantcotton1 == true then
        isActivebloodfruit = true
        isActivelemon = false
        isActivebluefruit = false
        isActivebanana = false
        isActiveberry = false
        isActiveorange = false
        isActiveapple = false
        isActivepear = false
        isActivecloudberry = false
        isActivejelly = false
        isActiveHARVESTONLY = false
    end
 if Options.plantfruitplantez.Value == "Lemon" and plantcotton1 == true then
    isActivebloodfruit = false
    isActivelemon = true
    isActivebluefruit = false
    isActivebanana = false
    isActiveberry = false
    isActiveorange = false
    isActiveapple = false
    isActivepear = false
    isActivecloudberry = false
    isActivejelly = false
    isActiveHARVESTONLY = false
    end
    if Options.plantfruitplantez.Value == "Banana" and plantcotton1 == true then
        isActivebloodfruit = false
        isActivelemon = false
        isActivebluefruit = false
        isActivebanana = true
        isActiveberry = false
        isActiveorange = false
        isActiveapple = false
        isActivepear = false
        isActivecloudberry = false
        isActivejelly = false
        isActiveHARVESTONLY = false
    end
    if Options.plantfruitplantez.Value == "Bluefruit" and plantcotton1 == true then
        isActivebloodfruit = false
        isActivelemon = false
        isActivebluefruit = true
        isActivebanana = false
        isActiveberry = false
        isActiveorange = false
        isActiveapple = false
        isActivepear = false
        isActivecloudberry = false
        isActivejelly = false
        isActiveHARVESTONLY = false
    end
    if Options.plantfruitplantez.Value == "Orange" and plantcotton1 == true then
        isActivebloodfruit = false
        isActivelemon = false
        isActivebluefruit = false
        isActivebanana = false
        isActiveberry = false
        isActiveorange = true
        isActiveapple = false
        isActivepear = false
        isActivecloudberry = false
        isActivejelly = false
        isActiveHARVESTONLY = false
    end
    if Options.plantfruitplantez.Value == "Apple" and plantcotton1 == true then
        isActivebloodfruit = false
        isActivelemon = false
        isActivebluefruit = false
        isActivebanana = false
        isActiveberry = false
        isActiveorange = false
        isActiveapple = true
        isActivepear = false
        isActivecloudberry = false
        isActivejelly = false
        isActiveHARVESTONLY = false
    end
    if Options.plantfruitplantez.Value == "Prickly Pear" and plantcotton1 == true then
        isActivebloodfruit = false
        isActivelemon = false
        isActivebluefruit = false
        isActivebanana = false
        isActiveberry = false
        isActiveorange = false
        isActiveapple = false
        isActivepear = true
        isActivecloudberry = false
        isActivejelly = false
        isActiveHARVESTONLY = false
    end
    if Options.plantfruitplantez.Value == "Cloudberry" and plantcotton1 == true then
        isActivebloodfruit = false
        isActivelemon = false
        isActivebluefruit = false
        isActivebanana = false
        isActiveberry = false
        isActiveorange = false
        isActiveapple = false
        isActivepear = false
        isActivecloudberry = true
        isActivejelly = false
        isActiveHARVESTONLY = false
    end
    if Options.plantfruitplantez.Value == "Berry" and plantcotton1 == true then
        isActivebloodfruit = false
        isActivelemon = false
        isActivebluefruit = false
        isActivebanana = false
        isActiveberry = true
        isActiveorange = false
        isActiveapple = false
        isActivepear = false
        isActivecloudberry = false
        isActivejelly = false
        isActiveHARVESTONLY = false
    end
    if Options.plantfruitplantez.Value == "Jelly" and plantcotton1 == true then
        isActivebloodfruit = false
        isActivelemon = false
        isActivebluefruit = false
        isActivebanana = false
        isActiveberry = false
        isActiveorange = false
        isActiveapple = false
        isActivepear = false
        isActivecloudberry = false
        isActivejelly = true
        isActiveHARVESTONLY = false
    end
    if Options.plantfruitplantez.Value == "Harvest Only" and plantcotton1 == true then
        isActivebloodfruit = false
        isActivelemon = false
        isActivebluefruit = false
        isActivebanana = false
        isActiveberry = false
        isActiveorange = false
        isActiveapple = false
        isActivepear = false
        isActivecloudberry = false
        isActivejelly = false
        isActiveHARVESTONLY = true
    end
if plantcotton1 == false then
    isActivebloodfruit = false
    isActivelemon = false
    isActivebluefruit = false
    isActivebanana = false
    isActiveberry = false
    isActiveorange = false
    isActiveapple = false
    isActivepear = false
    isActivecloudberry = false
    isActivejelly = false
    isActiveHARVESTONLY = false
end
end)
-----------------------------------------------------------------------------------------------------------settings
print('DENDRITE.CC SUCCESSFULLY LOADED!')
-----------------------------------------------------------------------------------------------------------
local MenuGroup = Tabs['UI Settings']:AddLeftGroupbox('Menu')
MenuGroup:AddButton('Quit', function() UILIB:Unload() end) 
MenuGroup:AddButton('Discord', function() local http_request = http_request or request or syn.request;local Invite = {['cmd'] = 'INVITE_BROWSER',['args'] = {["code"] = 'cJbNF3ZHh2'},['nonce'] = game:GetService('HttpService'):GenerateGUID(true)}http_request({Url = 'http://127.0.0.1:6463/rpc?v=1',Method = 'POST',Headers = {['Content-Type'] = 'application/json',['Origin'] = 'https://discord.com'},Body = game:GetService('HttpService'):JSONEncode(Invite)}) Library:Notify('üí∏ Dendrite.cc | Discord Server Has Been Launched!', 6.9) end) 
UILIB:OnUnload(function()
    print('Dendrite.cc Has Been Closed')
    UILIB.Unloaded = true
end)
ThemeManager:SetLibrary(UILIB)
SaveManager:SetLibrary(UILIB)
SaveManager:IgnoreThemeSettings() 
SaveManager:SetIgnoreIndexes({ 'MenuKeybind' }) 
SaveManager:SetFolder('Dendrite.cc Config')
SaveManager:BuildConfigSection(Tabs['UI Settings']) 
ThemeManager:ApplyToTab(Tabs['UI Settings'])
local MenuGroupRight = Tabs['UI Settings']:AddRightGroupbox('Server')
MenuGroupRight:AddButton('Rejoin', function() 
    local ts = game:GetService("TeleportService")
    local p = game:GetService("Players").LocalPlayer 
    ts:Teleport(game.PlaceId, p)
end) 
MenuGroupRight:AddToggle('ANTIAFKASHDGSADHKSADJH', {
    Text = 'ANTI-AFK',
    Default = false,               -- Default value (true / false)
    Tooltip = 'Enable/Disable ANTI-AFK', -- Information shown when you hover over the toggle
})
Toggles.ANTIAFKASHDGSADHKSADJH:OnChanged(function(fakeafkniggersfags) 
    toggleAntiAFKVariable()
end)
MenuGroup:AddLabel('Menu bind'):AddKeyPicker('MenuKeybind', { Default = 'Insert', NoUI = true, Text = 'Menu keybind' }) 
Library.ToggleKeybind = Options.MenuKeybind -- Allows you to have a custom keybind for the menu
MenuGroup:AddToggle('Watermarktog', {
    Text = 'Watermark',
    Default = true,               -- Default value (true / false)
    Tooltip = 'Enable/Disable Watermark', -- Information shown when you hover over the toggle
})
Toggles.Watermarktog:OnChanged(function(wtkm)
    UILIB:SetWatermarkVisibility(true)

    if wtkm == false then
        UILIB:SetWatermarkVisibility(false)
    end
end)
