_G.Nitradenplanteniga = false
local PlantingType = script.Parent.Parent.Parent.dropdwnmodeselect.select
local FruitType = script.Parent.Parent.Parent.dropdwnfruitselect.select
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local HumanoidRootPart = character:WaitForChild("HumanoidRootPart")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local packets = require(game:GetService("ReplicatedStorage").Modules.Packets)
local PlaceStructurePacket = packets.InteractStructure
local WALK_DISTANCE_THRESHOLD = 5
local INTERACT_DISTANCE_THRESHOLD = 10

local fruitToItemID = {
	Boodfruit = 94,
	Lemon = 99,
	Bluefruit = 377,
	Orange = 602,
	Apple = 243,
	Berry = 35,
	Sunfruit = 128,
	Oddberry = 32,
	Strawberry = 282,
	Carrot = 149,
	Jelly = 604,
	["Prickly Pear"] = 378,
	Banana = 606,
	Cloudberry = 101,
	Coconut = 4
}

local activeTween = nil

local function calculateDistance(position1, position2)
	return (position1 - position2).magnitude
end

local function autoWalkToReference()
	for i, v in ipairs(game.Workspace.Deployables:GetChildren()) do
		if v.Name == "Plant Box" and v:IsA("Model") then
			local referencePart = v:FindFirstChild("Reference")
			if referencePart then
				if not v:FindFirstChild("Seed") and _G.Nitradenplanteniga then
					local playerPosition = HumanoidRootPart.Position
					local targetPosition = referencePart.Position
					local distance = calculateDistance(playerPosition, targetPosition)

					local distanceToReference = calculateDistance(playerPosition, v.Reference.Position)
					if distanceToReference <= INTERACT_DISTANCE_THRESHOLD then
						local args = {
							entityID = v:GetAttribute("EntityID"),
							itemID = fruitToItemID[FruitType.Text]
						}
						PlaceStructurePacket.send(args)
					end

					if distance > WALK_DISTANCE_THRESHOLD then
						if PlantingType.Text == "Tween" then
							if activeTween then
								activeTween:Cancel()
							end
							local tweenInfo = TweenInfo.new(
								distance / 25,
								Enum.EasingStyle.Linear,
								Enum.EasingDirection.Out
							)
							local goal = {
								CFrame = CFrame.new(targetPosition)
							}
							activeTween = TweenService:Create(HumanoidRootPart, tweenInfo, goal)
							activeTween:Play()
							activeTween.Completed:Connect(function()
								activeTween = nil
							end)
						else
							humanoid:MoveTo(targetPosition)
							humanoid.MoveToFinished:Wait()
						end
					else
						local args = {
							entityID = v:GetAttribute("EntityID"),
							itemID = fruitToItemID[FruitType.Text]
						}
						PlaceStructurePacket.send(args)
					end
					RunService.Heartbeat:Wait()
				end
			end
		end
	end
end

local heartbeatConnection

script.Parent.MouseButton1Click:Connect(function()
	if _G.Nitradenplanteniga == false then
		_G.Nitradenplanteniga = true
		script.Parent.Parent.checkerudeemn.BackgroundColor3 = Color3.fromRGB(255, 170, 0)

		if PlantingType.Text == "Auto Walk" or PlantingType.Text == "Tween" then
			heartbeatConnection = RunService.Heartbeat:Connect(autoWalkToReference)
		end
	else
		_G.Nitradenplanteniga = false
		script.Parent.Parent.checkerudeemn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)

		if heartbeatConnection then
			heartbeatConnection:Disconnect()
			heartbeatConnection = nil
		end
	end
end)
